{"version":3,"sources":["ng://angular-gauge-chart/lib/gauge-chart.component.ts","ng://angular-gauge-chart/lib/gauge-chart.component.html","ng://angular-gauge-chart/lib/gauge-chart.module.ts"],"names":["GaugeChartComponent","prototype","ngOnInit","this","name","nameFont","Math","round","canvasWidth","nameMargin","bottomLabel","bottomLabelFont","bottomLabelMargin","optionsCheck","element","gaugeArea","nativeElement","drawChart","oldOptions","JSON","parse","stringify","options","console","warn","needleValue","centralLabel","ngDoCheck","areEqual","obj1","obj2","redraw","gaugeChart","removeGauge","GaugeChart.gaugeChart","updateNeedle","ngOnChanges","changes","firstChange","currentValue","selectors","viewQuery","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","GaugeChartModule","imports","declarations","exports"],"mappings":"oXAgBA,SAAAA,YAyBEA,EAAAC,UAAAC,SAAA,WAEMC,KAAKC,OACFD,KAAKE,WACRF,KAAKE,SAAW,GAAKC,KAAKC,MAAMJ,KAAKK,YAAc,KAErDL,KAAKM,WAAa,GAAKH,KAAKC,OAAOJ,KAAKE,SAAW,IAGjDF,KAAKO,cACFP,KAAKQ,kBACRR,KAAKQ,gBAAkB,GAAKL,KAAKC,MAAMJ,KAAKK,YAAc,KAE5DL,KAAKS,kBAAoB,IAAMT,KAAKQ,iBAGlCR,KAAKU,iBACPV,KAAKW,QAAUX,KAAKY,UAAUC,cAC9Bb,KAAKc,aAEPd,KAAKe,WAAaC,KAAKC,MAAMD,KAAKE,UAAUlB,KAAKmB,WAGnDtB,EAAAC,UAAAY,aAAA,WACE,OAAwB,MAApBV,KAAKK,aACPe,QAAQC,KAAK,uDACN,GACsB,MAApBrB,KAAKsB,aACdF,QAAQC,KAAK,uDACN,IAEgB,MAArBrB,KAAKuB,eACPvB,KAAKuB,aAAe,KAEf,IAGT1B,EAAAC,UAAA0B,UAAA,WACOxB,KAAKyB,SAASzB,KAAKmB,QAASnB,KAAKe,cACpCf,KAAKc,WAAU,GACfd,KAAKe,WAAaC,KAAKC,MAAMD,KAAKE,UAAUlB,KAAKmB,YAIrDtB,EAAAC,UAAA2B,SAAA,SAASC,EAAMC,GACb,OAAOX,KAAKE,UAAUQ,KAAUV,KAAKE,UAAUS,IAGjD9B,EAAAC,UAAAgB,UAAA,SAAUc,QAAA,IAAAA,IAAAA,GAAA,GACJA,GACF5B,KAAK6B,WAAWC,cAElB9B,KAAKmB,QAAQI,aAAevB,KAAKuB,aACjCvB,KAAK6B,WAAaE,EAAAA,WAChB/B,KAAKW,QACLX,KAAKK,YACLL,KAAKmB,SAEPnB,KAAK6B,WAAWG,aAAahC,KAAKsB,cAGpCzB,EAAAC,UAAAmC,YAAA,SAAYC,GACNA,EAAQZ,cAAgBY,EAAQZ,YAAYa,cAC9CnC,KAAKsB,YAAcY,EAAQZ,YAAYc,aACvCpC,KAAK6B,WAAWG,aAAahC,KAAKsB,cAEhCY,EAAQX,eAAiBW,EAAQX,aAAaY,cAChDnC,KAAKuB,aAAeW,EAAQX,aAAaa,aACzCpC,KAAKc,WAAU,sCAxFRjB,wCAAAA,EAAmBwC,UAAA,CAAA,CAAA,mBAAAC,UAAA,SAAAC,EAAAC,UAAA,EAAAD,oeCrBhCE,EAAAA,kBAAAA,EAAAA,MAAAA,GACEA,EAAAA,kBAAAA,EAAAA,QAGEC,EAAAA,UAAAA,GACFC,EAAAA,kBACAC,EAAAA,aAAAA,EAAAA,MAAAA,KAAAA,GACAH,EAAAA,kBAAAA,EAAAA,OAAAA,GAIEC,EAAAA,UAAAA,GACFC,EAAAA,kBACFA,EAAAA,yBAbyBE,EAAAA,eAAAA,QAAAA,EAAAA,YAAAA,MAErBC,EAAAA,aAAAA,GAAAD,EAAAA,eAAAA,YAAAA,EAAAA,SAAAA,KAAAA,CAA+B,gBAAAL,EAAAlC,WAAA,MAE/BwC,EAAAA,aAAAA,GAAAC,EAAAA,sBAAAA,IAAAA,EAAAA,KAAAA,KAKAD,EAAAA,aAAAA,GAAAD,EAAAA,eAAAA,YAAAA,EAAAA,gBAAAA,KAAAA,CAAsC,aAAAL,EAAA/B,kBAAA,MAEtCqC,EAAAA,aAAAA,GAAAC,EAAAA,sBAAAA,IAAAA,EAAAA,YAAAA,oUCRJ,SAAAC,+CAKaA,oEAAAA,IAAgBC,QAAA,CAJlB,+EAIED,EAAgB,CAAAE,aAAA,CAHZrD,GAAmBsD,QAAA,CACxBtD","sourcesContent":["/**\n * Angular 2 decorators and services\n */\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n  DoCheck,\n} from '@angular/core'\nimport * as GaugeChart from 'gauge-chart'\n\n/**\n * GaugeChart Component\n */\n@Component({\n  selector: 'rg-gauge-chart',\n  templateUrl: './gauge-chart.component.html',\n  styleUrls: ['./gauge-chart.component.css'],\n})\nexport class GaugeChartComponent implements OnInit, OnChanges, DoCheck {\n  @ViewChild('gaugeArea', { static: true }) gaugeArea\n\n  @Input() canvasWidth: number\n  @Input() needleValue: number\n  @Input() centralLabel: string\n  @Input() options\n  @Input() wrapOptions?\n  @Input() name?: string\n  @Input() nameFont?: string\n  @Input() bottomLabel?: string\n  @Input() bottomLabelFont?: string\n\n  public nameMargin: string\n  public bottomLabelMargin: string\n\n  private element\n  private gaugeChart: any\n  private oldOptions\n\n  ngOnInit() {\n    // calculate styles for name and bottomLabel\n    if (this.name) {\n      if (!this.nameFont) {\n        this.nameFont = '' + Math.round(this.canvasWidth / 15)\n      }\n      this.nameMargin = '' + Math.round(+this.nameFont / 4)\n    }\n\n    if (this.bottomLabel) {\n      if (!this.bottomLabelFont) {\n        this.bottomLabelFont = '' + Math.round(this.canvasWidth / 10)\n      }\n      this.bottomLabelMargin = '-' + this.bottomLabelFont\n    }\n\n    if (this.optionsCheck()) {\n      this.element = this.gaugeArea.nativeElement\n      this.drawChart()\n    }\n    this.oldOptions = JSON.parse(JSON.stringify(this.options))\n  }\n\n  optionsCheck() {\n    if (this.canvasWidth == null) {\n      console.warn('gauge-chart warning: canvasWidth is not specified!')\n      return false\n    } else if (this.needleValue == null) {\n      console.warn('gauge-chart warning: needleValue is not specified!')\n      return false\n    }\n    if (this.centralLabel == null) {\n      this.centralLabel = ''\n    }\n    return true\n  }\n\n  ngDoCheck() {\n    if (!this.areEqual(this.options, this.oldOptions)) {\n      this.drawChart(true)\n      this.oldOptions = JSON.parse(JSON.stringify(this.options))\n    }\n  }\n\n  areEqual(obj1, obj2) {\n    return JSON.stringify(obj1) === JSON.stringify(obj2)\n  }\n\n  drawChart(redraw = false) {\n    if (redraw) {\n      this.gaugeChart.removeGauge()\n    }\n    this.options.centralLabel = this.centralLabel\n    this.gaugeChart = GaugeChart.gaugeChart(\n      this.element,\n      this.canvasWidth,\n      this.options,\n    )\n    this.gaugeChart.updateNeedle(this.needleValue)\n  }\n\n  ngOnChanges(changes) {\n    if (changes.needleValue && !changes.needleValue.firstChange) {\n      this.needleValue = changes.needleValue.currentValue\n      this.gaugeChart.updateNeedle(this.needleValue)\n    }\n    if (changes.centralLabel && !changes.centralLabel.firstChange) {\n      this.centralLabel = changes.centralLabel.currentValue\n      this.drawChart(true)\n    }\n  }\n}\n","<div class=\"gauge-chart\" [style.width.px]=\"canvasWidth\">\n  <span\n    [style.font-size.px]=\"nameFont\"\n    [style.margin-bottom.px]=\"nameMargin\">\n    {{name}}\n  </span>\n  <div #gaugeArea></div>\n  <span\n    class=\"gauge-chart__label\"\n    [style.font-size.px]=\"bottomLabelFont\"\n    [style.margin-top.px]=\"bottomLabelMargin\">\n    {{bottomLabel}}\n  </span>\n</div>\n","import { NgModule } from '@angular/core'\nimport { GaugeChartComponent } from './gauge-chart.component'\n\n@NgModule({\n  imports: [],\n  declarations: [GaugeChartComponent],\n  exports: [GaugeChartComponent],\n})\nexport class GaugeChartModule {}\n"]}